// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Existing models remain the same...
model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  name          String
  accountType   String   // 'business' | 'individual'
  phone         String?
  avatar        String?
  verified      Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Business specific fields
  company       Company?
  manufacturer  Manufacturer?
  products      Product[]
  requirements  Requirement[]
  responses     Response[]
  orders        Order[]
  reviews       Review[]
}

// New Manufacturer model
model Manufacturer {
  id              Int      @id @default(autoincrement())
  name            String
  logo            String?
  description     String
  detailedDescription String @db.Text
  established     Int
  headquarters    String
  employees       String
  revenue         String
  creditScore     Int
  creditRating    String
  creditStatus    String
  website         String?
  
  // Certifications
  certifications  ManufacturerCertification[]
  
  // Markets
  markets         MarketServed[]
  
  // Specialties
  specialties     Specialty[]
  
  // Stats
  totalProducts   Int      @default(0)
  totalCustomers  Int      @default(0)
  countriesServed Int      @default(0)
  successRate     Float    @default(0)
  
  // Relations
  user           User     @relation(fields: [userId], references: [id])
  userId         Int      @unique
  products       Product[]
  
  // Timestamps
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model ManufacturerCertification {
  id              Int           @id @default(autoincrement())
  name            String
  issuedDate      DateTime
  expiryDate      DateTime
  issuer          String
  manufacturer    Manufacturer  @relation(fields: [manufacturerId], references: [id])
  manufacturerId  Int
}

model MarketServed {
  id              Int           @id @default(autoincrement())
  name            String
  region          String
  entryYear       Int
  manufacturer    Manufacturer  @relation(fields: [manufacturerId], references: [id])
  manufacturerId  Int
}

model Specialty {
  id              Int           @id @default(autoincrement())
  name            String
  description     String?
  manufacturer    Manufacturer  @relation(fields: [manufacturerId], references: [id])
  manufacturerId  Int
}

// Existing models continue...
model Company {
  id            Int      @id @default(autoincrement())
  name          String
  description   String?
  logo          String?
  website       String?
  type          String   // manufacturer, wholesaler, retailer, etc.
  size          String?  // small, medium, large
  founded       Int?
  registrationNo String?
  verified      Boolean  @default(false)
  
  // Address
  address       String?
  city          String?
  state         String?
  country       String
  postalCode    String?
  
  // Contact
  contactEmail  String?
  contactPhone  String?
  
  // Business Categories
  categories    CategoryOnCompany[]
  
  // Relations
  user          User     @relation(fields: [userId], references: [id])
  userId        Int      @unique
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// Rest of the existing models remain unchanged...